% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preprocess_data.R
\name{preprocess_data}
\alias{preprocess_data}
\title{Preprocess a text corpus for embedding.}
\usage{
preprocess_data(
  data,
  share_data = 1,
  stopwords_language = "en",
  custom_stopwords = NULL
)
}
\arguments{
\item{data}{A speakers_text object generated with \code{prepare_data()} or a character string specifying the path to the text file
to be read. The file is read line-by-line.}

\item{share_data}{A numeric value between 0.0 and 1.0 (inclusive) indicating
the proportion of the data to keep. Defaults to \code{1.0} (keeping all data).}

\item{stopwords_language}{A character string specifying the language for
the default stop words, as supported by the \code{stopwords} package.
Defaults to \code{"en"} (English). Use \code{NULL} to skip loading default stop words.}

\item{custom_stopwords}{A character vector of additional stop words to
exclude from bigram formation. Defaults to \code{NULL}.}
}
\value{
A list where each element is a character vector representing a
tokenized line (i.e., a list of words). If \code{share_data < 1.0},
this list will be a random subsample of the lines.
}
\description{
Reads a text file, performs bigram and trigram substitution (using a
helper function \code{create_bigrams} which is assumed to be available
in the environment), and tokenizes the resulting text. Optionally, it
subsamples the data.
}
\details{
The function relies heavily on Tidyverse packages and requires an external function
named \code{create_bigrams} to be defined in the search path.

\code{create_bigrams} is called twice to perform bigram and then trigram substitution.
}
\examples{
\dontrun{
# Assuming 'text_data.txt' exists and 'create_bigrams' is defined:
# The function requires an external helper function, e.g.:
# create_bigrams <- function(data, text_col, n_bigrams) {
#   # This is a placeholder and would contain the actual logic
#   # for finding and replacing n-grams.
#   return(data)
# }

# Full dataset
preprocessed_full <- preprocess_data("path/to/text_data.txt")

# Subsample 10\% of the data
preprocessed_sample <- preprocess_data("path/to/text_data.txt", share_data = 0.1)
}
}
